import * as React from 'react';

import App from 'components/App';
import Code from 'components/Code';
import Link from 'components/Link';

import {Metadata, MetadataType} from 'types/index';
import {siastrebov} from 'authors/index';

export const metadata: Metadata = {
  menu: 'Настройка .htaccess',
  title: 'Настройка .htaccess',
  description: 'Файл .htaccess является конфигурационным файлом Apache. Он позволяет задать реакцию сервера на запросы пользователя, настроить кэширование и сжатие, а также разграничить доступ к различным разделам сайта.',
  keywords: 'Настройка .htaccess',
  h1: 'Настройка .htaccess',
  author: siastrebov,
  type: MetadataType.ARTICLE,
};

export default function () {
  return (
      <App {...metadata}>
        <p>Файл .htaccess является конфигурационным файлом Apache. Он позволяет задать
          реакцию сервера на запросы пользователя, настроить кэширование и сжатие,
          а также разграничить доступ к различным разделам сайта,</p>
        <p>Возможности,
          которые предоставляет htaccess для конфигурации сервера слишком велики, чтобы уместиться
          в одной статье, но мы не собираемся рассматривать все тонкости
          конфигурации Apache, а рассмотрим лишь базовые настройки .htaccess для уменьшения
          дубликатов страниц на сайте.</p>
        <hr/>
        <p>Во-первых, на сайте имеется дубликат главного зеркала, сайт
          открывается как с www, так и без него.</p>
        <p>Такое положение дел плохо тем
          что:</p>
        <ul>
          <li>Путает пользователя относительно правильности названия сайта</li>
          <li>Ухудшает запоминание название сайта пользователем</li>
          <li>Мешает поисковым роботам адекватно воспринимать страница сайта (поисковые роботы
            считают страницы с www и без www разными, а контент на них
            дублируемым)
          </li>
        </ul>
        <p>Для избавления от дубликата главного зеркала в .htaccess необходимо
          прописать:</p>
        <Code
            src='./examples/example-1.example.txt'
            data={require('./examples/example-1.example.txt')}
        />
        <p>Для
          настройки в качестве основного зеркала сайта название без www</p>
        <Code
            src='./examples/example-2.example.txt'
            data={require('./examples/example-2.example.txt')}
        />
        <p>Для настройки в качестве основного зеркала названия с www</p>
        <hr/>
        <p>Во-вторых, на сайте имеются дубликат головного файла сайта
          (index.html, index.php и т.д.)</p>
        <p>Такое положение дел плохо тем что:</p>
        <ul>
          <li>Ухудшает вид основной страницы сайта (гораздо приятнее видеть имя сайта без
            всяких index нежели сними)
          </li>
          <li>Мешает поисковым роботам адекватно воспринимать страница сайта (поисковые роботы
            считают адрес сайта с index и без него как разные страницы,
            а контент на них дублируемым)
          </li>
        </ul>
        <p>Для избавления от дубликатов головного файла сайта необходимо прописать в
          .htaccess:</p>
        <Code
            src='./examples/example-3.example.txt'
            data={require('./examples/example-3.example.txt')}
        />
        <hr/>
        <p>В-третьих, дубликаты GET (параметров передаваемых в url после
          знака ?)</p>
        <p>Такое положение дел плохо тем что:</p>
        <ul>
          <li>Ухудшает вид основной страницы сайта (гораздо приятнее видеть URL без GET
            параметров нежели сними)
          </li>
          <li>Мешает поисковым роботам адекватно воспринимать страница сайта (поисковые
            роботы считают адрес сайта с GET и без него как разные страницы,
            а контент на них дублируемым)
          </li>
        </ul>
        <p>Для избавления от дубликатов GET необходимо прописать в .htaccess:</p>
        <Code
            src='./examples/example-4.example.txt'
            data={require('./examples/example-4.example.txt')}
        />
        <hr/>
        <p>Общее правило для избавления от дубликатов:</p>
        <Code
            src='./examples/example-5.example.txt'
            data={require('./examples/example-5.example.txt')}
        />
        <hr/>
        <p>В данных конфигурациях:</p>
        <ul>
          <li>RewriteEngine on — директива включения/выключения механизма
            преобразования (пишется одна на весь htaccess)
          </li>
          <li>RewriteCond {'%{HTTP_HOST}'} !^crazysquirrel\.ru$ [NC] — определение
            условия для применения преобразования только к названиям сайта,
            отличным от нужного
          </li>
          <li>RewriteRule ^(.*)$ <Link
              to='https://crazysquirrel.ru/$1'>https://crazysquirrel.ru/$1</Link> [R=301,L]
            —
            механизм преобразования перенаправляющий пользователя на «правильное
            имя сайта»
          </li>
          <li>RewriteCond {'%{QUERY_STRING}'} !^$ [NC] — определяет условие для
            применения преобразования только к адресам у которых есть GET
            параметры
          </li>
          <li>RewriteCond {'%{THE_REQUEST}'} ? [NC] — определяет условие
            преобразования только для адресов имеющим ?
          </li>
          <li>RewriteCond {'%{THE_REQUEST}'} !admin [NC] — определяет правила
            преобразования для адресов не имеющим в своем составе дирректории
            или файла административной панели сайта (если на сайте нет CMS или для
            её работы не требуются GET параметры, данную строчку можно
            не писать)
          </li>
          <li>crazysquirrel.ru — название сайта</li>
          <li>admin — директория административной панели сайта</li>
          <li>index.php — главный файл сайта</li>
          <li>R=301 — флаг, устанавливающий код состояния http для неправильного
            сайта (301 — флаг постоянной смены адреса)
          </li>
          <li>L — флаг, указывающий, что данное правило последнее</li>
          <li>NC — флаг, указывающий, что для данного правила не важен регистр
            написания
          </li>
        </ul>
      </App>
  );
}
